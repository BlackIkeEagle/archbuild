#!/bin/bash

## init
dest=/data/packages/repo
thisfolder=`pwd`
source ../repository
packagesdir=${dest}/${repository}

## build function
function buildInChroot() {
if [ "$1" == "any" ]; then
  _arch=$1
  buildx="sudo makechrootpkg-ike -c -r /data/packages/arch64"
elif [ "$1" == "x86_64" ]; then
  _arch=$1
  buildx="sudo makechrootpkg-ike -c -r /data/packages/arch64"
elif [ "$1" == "i686" ]; then
  _arch=$1
  buildx="linux32 sudo makechrootpkg-ike -c -r /data/packages/arch32"
else
  _arch='any'
  buildx="sudo makechrootpkg-ike -c -r /data/packages/arch64"
fi
fullpkg=${pkgname}-${pkgver}-${pkgrel}-${_arch}.pkg.tar.xz
if [ -e "${packagesdir}/${_arch}/${fullpkg}" ]; then
  echo "package ${thisfolder##*/}-${pkgver} .pkg already exists"
  return 1
else
  if [ -d ${packagesdir}/${_arch} ]; then
    echo "packagesdir exists"
  else
    mkdir -p ${packagesdir}/${_arch}
    if [ $? -eq 0 ]; then
      echo "packagesdir created"
    else
      echo "failed to create packagesdir EXIT"
      return 3
    fi
  fi
  PKGDEST=${packagesdir}/${_arch} ${buildx} -- --log
  if [ $? -eq 0 ]; then
    echo "package ${thisfolder##*/}-${pkgver} .pkg successfully built"
    rm -f *.log*
    pushd ${packagesdir}/${_arch}
    find -name "${thisfolder##*/}*" -mmin +80 -delete
    repo-add ${repository}.db.tar.gz ${thisfolder##*/}*.pkg.*
    popd
  else
    echo "package ${thisfolder##*/}-${pkgver} .pkg failed"
    return 2
  fi
  return 0
fi
return 0
}

## main
echo "------------------------------------------------------------"
echo "Update System"
echo "------------------------------------------------------------"
sudo mkarchroot -u /data/packages/arch32/root
sudo mkarchroot -u /data/packages/arch64/root

source PKGBUILD
echo "run makepkg for ${thisfolder##*/}"
for _arch in ${arch[@]}; do
  echo ${_arch}
  buildInChroot ${_arch}
done
[ -x /data/packages/SyncRepo ] && (/data/packages/SyncRepo)
exit;

# vim:set ts=2 sw=2 et:
