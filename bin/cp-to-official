#!/bin/bash
source "$(dirname $0)/../share/app-init"

if [ ! -e PKGBUILD ]; then
	errmsg "this script must be run with a directory containing a PKGBUILD"
	exit 1
fi

source PKGBUILD
if [ "$pkgbase" = "" ]; then
	pkgbase=$pkgname
fi

# main
main=0
if [ ! -z "$1" ]; then
	if [ "$1" = "main" ]; then
		main=1
	fi
fi

msg "$pkgbase"

old_pkgver=$pkgver
old_pkgrel=$pkgrel
if [[ ! -z "$epoch" ]]; then
    old_pkgver="$epoch:$old_pkgver"
fi

msg2 "version: $old_pkgver-$old_pkgrel"

currentrepo=$(cd "$rpdir/$pkgbase"; git symbolic-ref HEAD | sed -e 's/refs\/heads\///' 2> /dev/null)

if [[ "$currentrepo" == "" ]]; then
    errmsg "cp-to-official must source from a git repo"
    exit 1
fi

baserepo=${currentrepo%-testing}
baserepo=${baserepo%-staging}

if [[ "$baserepo" != "blackeagle-pre-community" ]]; then
    errmsg "the blackeagle-pre-community branch must be the base"
    exit 1
fi

if [ $main -eq 1 ]; then
    (
        cd "$rpdir/$pkgbase"
        git checkout $baserepo
    )
fi

if [ ! -e $rpdir/$pkgbase/PKGBUILD ]; then
	errmsg "the PKGBUILD must exist in the pre-community repo"
	exit 1
fi
source $rpdir/$pkgbase/PKGBUILD

if [[ ! -z "$epoch" ]]; then
    pkgversion="$epoch:$pkgver"
else
    pkgversion="$pkgver"
fi

msg2 "     to: $pkgversion-$pkgrel"

if [ $(vercmp "$pkgversion-$pkgrel" "$old_pkgver-$old_pkgrel") -ge 0 ]; then
	msg "update official repo"
	( cd $rpdir/$pkgbase/; makepkg --source; rm -rf src/ )

	mv "$rpdir/$pkgbase/$pkgbase-$pkgversion-$pkgrel.src.tar.gz" ./
	bsdtar --strip-components=1 -xf "$pkgbase-$pkgversion-$pkgrel.src.tar.gz"
	rm -f "$pkgbase-$pkgversion-$pkgrel.src.tar.gz"
    rm -f .SRCINFO
    svn add * || true
	for splitpkg in ${pkgname[@]}; do
		for _arch in ${arch[@]}; do
			cp "$pkgrepo/pool/$splitpkg-$pkgversion-$pkgrel-$_arch".pkg.tar.* ./
		done
	done
fi

(
    cd "$rpdir/$pkgbase"
    pkg-remove
    git checkout $currentrepo
)
