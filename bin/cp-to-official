#!/bin/bash
source "$(dirname $0)/../share/app-init"

if [ ! -e PKGBUILD ]; then
	errmsg "this script must be run with a directory containing a PKGBUILD"
	exit 1
fi

source PKGBUILD
if [ "$pkgbase" = "" ]; then
	pkgbase=$pkgname
fi

msg "$pkgbase"

old_pkgver=$pkgver
old_pkgrel=$pkgrel

msg2 "version: $old_pkgver-$old_pkgrel"

currentrepo=$(cd "$rpdir/$pkgbase"; git symbolic-ref HEAD | sed -e 's/refs\/heads\///' 2> /dev/null)

if [[ "$currentrepo" == "" ]]; then
    errmsg "cp-to-officia must source from a git repo"
    exit 1
fi

baserepo=${currentrepo%-testing}
baserepo=${baserepo%-staging}

if [[ "$baserepo" != "blackeagle-pre-community" ]]; then
    errmsg "the blackeagle-pre-community branch must be the base"
    exit 1
fi

(
    cd "$rpdir/$pkgbase"
    git checkout $baserepo
)

if [ ! -e $rpdir/$pkgbase/PKGBUILD ]; then
	errmsg "the PKGBUILD must exist in the pre-community repo"
	exit 1
fi
source $rpdir/$pkgbase/PKGBUILD

msg2 "     to: $pkgver-$pkgrel"

if [ $(vercmp "$pkgver-$pkgrel" "$old_pkgver-$old_pkgrel") -gt 0 ]; then
	msg "update official repo"
	( cd $rpdir/$pkgbase/; makepkg --source; rm -rf src/ )
	mv $rpdir/$pkgbase/$pkgbase-$pkgver-$pkgrel.src.tar.gz ./
	tar --strip-components=1 -xf $pkgbase-$pkgver-$pkgrel.src.tar.gz
	rm -f $pkgbase-$pkgver-$pkgrel.src.tar.gz
    rm -f .SRCINFO
	for splitpkg in ${pkgname[@]}; do
		for _arch in ${arch[@]}; do
			cp $pkgrepo/pool/$splitpkg-$pkgver-$pkgrel-$_arch.pkg.tar.?z* ./
		done
	done
fi

(
    cd "$rpdir/$pkgbase"
    pkg-remove
    git checkout $currentrepo
)
