#!/bin/bash
source "$(dirname $0)/../share/app-init"

if [ -e repository ]; then
	source repository
else
	errmsg "You must run this script inside a repository"
	exit 1
fi

returndir=`pwd`

msg "clean ${repository} packages"
msg2 "building packages list"
packages=()
for pkgbuild in $(find -mindepth 2 -maxdepth 2 -name "PKGBUILD"); do
	source $pkgbuild
	packages+=(${pkgname[@]})
	unset pkgname
done

msg2 "list packages to keep"
for package in ${packages[@]}; do
	echo "${package}-*"
done > "$varPath/cleanrepo.keep.tmp.txt"

function cleanRepo() {
	if [ "$1" = "" ]; then
		errmsg "no architecture given"
		return 1
	fi
	packagesdir=${pkgrepo}/${repository/-any/}/${1}
	msg "clean ${repository} for ${1}"
	cd ${packagesdir}
	msg2 "following packages will be dropped:"
	ls -1 *.pkg.tar.* | grep -v "$(cat "$varPath/cleanrepo.keep.tmp.txt")"
	msgExec "dropping packages"
	rm -f $(ls -1 *.pkg.tar.* | grep -v "$(cat "$varPath/cleanrepo.keep.tmp.txt")") > /dev/null 2>&1 && success || error
}

if [ "${rarch}" = "any" ]; then
	cleanRepo any
else
	for _arch in ${rarch}; do
		cleanRepo ${_arch}
	done
fi

rm -f "$varPath/cleanrepo.keep.tmp.txt"

cd ${returndir}

regenrepo clean
