#!/bin/bash
source "$(dirname $0)/../share/app-init"

msg "regenerate repository"

if [[ -z $1 ]]; then
    errmsg "please give a repository name"
	exit 1
fi

repository=$1

repodir=${pkgrepo}/${repository}
if [[ ! -d ${repodir} ]]; then
    mkdir -p "$repodir"
fi

if [[ ! -z $2 ]] && [[ "$2" == "clean" ]]; then
    clean="clean"
else
    clean=""
fi

function regenRepo() {
	if [[ "$1" == "" ]]; then
		errmsg "no architecture given"
		return 1
	fi

	msg "regenerate ${repository} for ${1}"
	packagesdir=${pkgrepo}/${repository}/${1}
    if [[ ! -d "$packagesdir" ]]; then
        mkdir -p "$packagesdir"
    fi

	cd ${packagesdir}

    if ls *.pkg.tar.?z > /dev/null 2>&1; then
        if [[ "$2" == "clean" ]]; then
            msgExec "remove db"
            rm -f ${repository}.db.tar.* > /dev/null 2>&1 && success || error
        fi

        msgExec "run repo-add"
        repo-add -q ${repository}.db.tar.gz *.pkg.tar.?z > /dev/null 2>&1 && success || error
        msgExec "run repo-add files"
        repo-add -f -q ${repository}.files.tar.gz *.pkg.tar.?z > /dev/null 2>&1 && success || error
    else
        # empty
        msgExec "create empty db"
        tar -cf ${repository}.db.tar.gz -T /dev/null
        ln -s ${repository}.db.tar.gz ${repository}.db
    fi
}

for _arch in ${rarch[@]}; do
    regenRepo ${_arch} $clean
done
